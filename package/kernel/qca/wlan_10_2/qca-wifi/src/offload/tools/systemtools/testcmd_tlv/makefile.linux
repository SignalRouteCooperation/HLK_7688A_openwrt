CC =$(TOOLPREFIX)gcc
LD =$(TOOLPREFIX)ld
MDK_ROOT = $(WORKAREA)/tools/systemtools
WLAN_INC_DIR = $(WLAN_TOP)
CFLAGS   =  -Wall -DLINUX -DLinux -I$(WORKAREA)/include -I$(WORKAREA)/../include -I$(WORKAREA)/os/linux/include -I$(WORKAREA)/include/systemtools  -I$(WORKAREA)/tools/systemtools/tools/utf_utilities/genParmTemplate/.output -I$(WORKAREA)/tools/systemtools/src2/include  -I$(WORKAREA)/tools/systemtools/tools/utf_utilities -I$(WORKAREA)/../include/systemtools/common/  -DTEST_STANDALONE -D_FOR_HOST_TESTING -D_PARSER_BIN_CMD_STREAM_API_ONLY -DUSED_BY_HOST -I$(WORKAREA)/tools/systemtools/tools/utf_utilities/include -D_HOST_SIM_TESTING -D_DEBUG -D_CAL_PWR_AS_API -I$(WORKAREA)/tools/systemtools/tools/utf_utilities/libtlvutil/ -I$(WORKAREA)/os/linux/tools/systemtools -I $(WLAN_INC_DIR)/os/linux/include -I $(WLAN_INC_DIR)/include -I $(WORKAREA)/target/src/wlan/wal/whal/eeprom -I $(WORKAREA)/tools/systemtools/tools/eepromUtil -I $(WLAN_INC_DIR)/lmac/ath_dev

CFLAGS += -DFCC_INCLUDED -D_OTA_TOOL -DSUPPORT_VHT -DARCH_BIG_ENDIAN

ifeq ($(TARGET),AR9888) # {
CFLAGS += -D_HOSTTOOLS_AR98XX
endif # }


COMMON_DIR      = $(MDK_ROOT)/tools/utf_utilities/common

VPATH   := $(MDK_ROOT)/tools/eepromUtil:$(MDK_ROOT)/tools/utf_utilities/genParmTemplate/.output:$(COMMON_DIR):$(MDK_ROOT)/tools/utf_utilities/verifyCmdStream
VPATH   += $(WORKAREA)/os/linux/tools/systemtools

LDFLAGS	= -L$(WORKAREA)/tools/systemtools/tools/utf_utilities/libtlvutil/Linux/ -ltlvutil -lrt 
LDFLAGS	+= -L$(WORKAREA)/tools/systemtools/tools/utf_utilities/libtlvutil/genParmTemplate/outputTemplate/Linux/ -ltlvtemplate 
#LDFLAGS += -L./addnl_inst/ -lrsnrpz -lnrp 

LIBTLV_DIR  = $(WORKAREA)/tools/systemtools/tools/utf_utilities/libtlvutil/

EXTRA_SRCS := testUtil.c eepromUtil_ar6004.c addnl_inst/rsnrpzBurstAv.c 

ifeq ($(OS),)
OS := Linux
endif

ifeq ($(DEBUG),1)
    CFLAGS += -g
endif

BIN_TC   = $(OS)/athtestcmd
SRCS_TC := athtestcmd.c $(WORKAREA)/os/linux/tools/systemtools/os_if.c
OBJS_TC := athtestcmd.o $(WORKAREA)/os/linux/tools/systemtools/os_if.o
#OBJS_TC += $(LDLIBS)

BIN_TXPWR   = $(OS)/calTxPwr.out
SRCS_TXPWR := mInst.c calTxPwr.c $(EXTRA_SRCS)
OBJS_TXPWR :=  $(patsubst %.c,$(OS)/%.o,$(SRCS_TXPWR))

#all: dirs $(BIN_TC) $(BIN_TXPWR)
all: dirs $(BIN_TC) 
#all: dirs $(BIN_TXPWR)

dirs:
	mkdir -p $(OS)
	mkdir -p $(OS)/addnl_inst
	cd $(LIBTLV_DIR);$(MAKE) -f makefile.Linux clean
	cd $(LIBTLV_DIR);$(MAKE) -f makefile.Linux all
	cp $(WORKAREA)/tools/systemtools/tools/utf_utilities/libtlvutil/Linux/libtlvutil.so $(OS)
	cp $(WORKAREA)/tools/systemtools/tools/utf_utilities/libtlvutil/genParmTemplate/outputTemplate/Linux/libtlvtemplate.so $(OS)

$(BIN_TC): $(OBJS_TC) 
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJS_TC)

$(BIN_TXPWR): $(OBJS_TXPWR) 
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJS_TXPWR)

$(OS)/%.o : %.c
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -rf $(OS) 
	cd $(LIBTLV_DIR);$(MAKE) -f makefile.Linux clean

.PHONY:
	clean all
